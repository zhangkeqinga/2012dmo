//
//  ProductInfoController.m
//  BGPreferentialShare
//
//  Created by Dong on 15-3-14.
//  Copyright (c) 2015年 Grant. All rights reserved.
//

#import "ProductInfoController.h"

#import "UtilsMacro.h"

@interface ProductInfoController()
<
UITableViewDataSource,
UITableViewDelegate
>

@property (weak, nonatomic) IBOutlet UITableView *friendTableView;

@property (strong, nonatomic) NSMutableArray *dataList;
@property (strong, nonatomic) NSMutableArray *dataList1;
@property (strong, nonatomic) NSMutableArray *dataList2;

@end

@implementation ProductInfoController


- (void)viewWillAppear:(BOOL)animated{
    [super viewWillAppear:animated];
    self.tabBarController.tabBar.hidden=YES;

}

- (void)viewDidLoad
{
    [super viewDidLoad];
    [self setTitleBackItemImage];
    self.title=@"项目描述";
    
    
}

- (void)setup
{
    //去掉tableView下面多余的横线
    _friendTableView.tableFooterView = [[UIView alloc] init];
    _friendTableView.separatorStyle = UITableViewCellSelectionStyleNone;
    _friendTableView.backgroundColor= COLORO(240, 240, 240);

    
    _dataList  = [[NSMutableArray alloc] init];
    _dataList1 = [[NSMutableArray alloc] init];
    _dataList2 = [[NSMutableArray alloc] init];
    

}


- (void)loadData
{
    [_dataList1 addObject:@"-"];
    [_dataList addObject:@"- -"];
    
    
}

- (void)withMangerProduct:(ProductModel *)productModel;
{

    [self setup];

    self.productModel_ =productModel;

    [self initRequest];


}

#pragma mark-
- (void)initRequest{
    if (!self.productModel_.productId) {
        DLog(@"购买人数   productModel_.i_id error ");
        return;
    }
    
    if (![self isnotNetWorking]) {
        AlertUtils *alert = [AlertUtils sharedInstance];
        [alert showWithText:@"请检查你的网络" inView:self.view lastTime:1.0];
        
        return;
    }
    
    [self showWaitLoading];
    
    
    AFHTTPRequestOperationManager *manager = [AFHTTPRequestOperationManager manager];
    manager.responseSerializer = [AFJSONResponseSerializer serializer];//使用这个将得到的是JSON
    
    NSDictionary *dict = @{ @"productId":self.productModel_.productId };
    
    
    //返回结果： productInfo(项目概述), productDetailFeilds(项目详细描述字段(资金用途|还款来源)等, 以|分隔),
    //productDetailInfo(项目描述相关文件图片URL(借款合同、营业执照、税务登记证、借款方公司副本)), productImage(项目描述图片

    //3.请求 第28个接口
    [manager POST:descriptionXMUrl parameters:dict success: ^(AFHTTPRequestOperation *operation, id responseObject) {
        NSString * isOk=[ NSString stringWithFormat:@"%@",[responseObject objectForKey:@"status"] ];
        NSString * messages=[ NSString stringWithFormat:@"%@",[responseObject objectForKey:@"message"] ];
        
        if ([@"2001" isEqual:isOk]) { //请求成功
            NSDictionary *dic_=[responseObject objectForKey:@"result"];
            
            self.productModel_.productInfo=[NSString stringWithFormat:@"%@",[dic_ objectForKey:@"productInfo"]];
            self.productModel_.productDetailFeilds=[NSString stringWithFormat:@"%@",[dic_ objectForKey:@"productDetailFeilds"]];
            self.productModel_.productDetailInfo=[NSString stringWithFormat:@"%@",[dic_ objectForKey:@"productDetailInfo"]];
            self.productModel_.productImage=[NSString stringWithFormat:@"%@",[dic_ objectForKey:@"productImage"]];
         
            
//            self.dataList=[NSMutableArray array];
//            if (self.productModel_.productInfo)
//            [self.dataList addObject:self.productModel_.productInfo];
//            if (self.productModel_.productDetailFeilds)
//            [self.dataList addObject:self.productModel_.productDetailFeilds];
//            if (self.productModel_.productDetailInfo)
//            [self.dataList addObject:self.productModel_.productDetailInfo];
//            if (self.productModel_.productImage)
//            [self.dataList addObject:[NSString stringWithFormat:@"%@",self.productModel_.productImage]];
            
            
            
            if (self.dataList) {
                [self.dataList removeAllObjects];
                self.dataList = nil;
            }
            
            self.dataList=[NSMutableArray array];
            
            if (self.dataList1) {
                [self.dataList1 removeAllObjects];
                self.dataList1 = nil;
            }
            
            self.dataList1=[NSMutableArray array];
            
            
            if (self.productModel_.productDetailInfo ){
                
                NSArray *array1=[self.productModel_.productDetailInfo componentsSeparatedByString:@"|" ];
                
                for (NSString *stirng in array1) {
                    [self.dataList addObject:stirng];
                }
                
                if (self.productModel_.productImage) {
                    [self.dataList addObject:self.productModel_.productImage];
                }else{
                    [self.dataList addObject:@""];
                }
                
            }

            
            if (self.productModel_.productDetailFeilds){
                
                NSArray *array=[self.productModel_.productDetailFeilds componentsSeparatedByString:@"|" ];
               
                for (NSString *stirng in array) {
                    [self.dataList1 addObject:stirng];
                }
                [self.dataList1 addObject:@"相关文件"];
            }
            

            
            
        }
        
        else if([@"9099" isEqual:isOk]){
            DLog(@"9099 错误 = %@",messages);
            
        }else{
            AlertUtils *alert = [AlertUtils sharedInstance];
            [alert showWithText:@"登陆失败" inView:self.view lastTime:1.0];
        }
        
        
        
        //删除没有的数据
        for (int i=0 ;i<[self.dataList1 count] ;i++) {
            NSString *strings1=[self.dataList1 objectAtIndex:i];
            NSString *strings2=[self.dataList objectAtIndex:i];
            
            if (!strings1 || [@"(null)" isEqual:strings1] ||
                !strings2 || [@"(null)" isEqual:strings2]) {
                
                [self.dataList1 removeObjectAtIndex:i];
                [self.dataList removeObjectAtIndex:i];
            }
            
        }

        
        
        
        [self.friendTableView reloadData];
        
        [self hideWaitLoading];
        
    } failure: ^(AFHTTPRequestOperation *operation, NSError *error) {
        
        AlertUtils *alert = [AlertUtils sharedInstance];
        [alert showWithText:@"请求失败" inView:self.view lastTime:1.0];
        
        DLog(@"%@", error);
        
        [self hideWaitLoading];
    }];
    
    
}


#pragma mark- UITableView dataSource and delegate methods
- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView{
    
    return [_dataList1 count];
}
- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    return 1;
}
- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section{
    return 30;
}


- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath{
    
    if (!_dataList) {
        return 0;
    }

    if ([self.dataList count]>indexPath.row) {
        NSString *strings=[self.dataList objectAtIndex:indexPath.section];
        
        if ([UnitPath judgmentImageName:strings]) {
            UIImage *images=self.productDetailImage;
            if (images.size.width==0) {
                return 0;
            }else{
                return  (ScreenWidth-30)*images.size.height/images.size.width;
            }
            
        }else{
            
            CGSize sizeFrame = [UnitPath calculateFrameWithContent:strings];
            return 20+sizeFrame.height;
        }

    }else{
        return 0;
    }
    
}


- (UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section{
    
    UIView *views=[[UIView alloc]initWithFrame:CGRectMake(0, 0, 100, 30)];
    views.backgroundColor=[UIColor clearColor];
    views.backgroundColor=COLORO(240, 240, 240);
    
    views.backgroundColor=BACKVIEWACOLOR;

    UILabel *lable=[[UILabel alloc]init];
    lable.frame=CGRectMake(15, 0, 300, 30);
    lable.font=[UIFont boldSystemFontOfSize:14];
    lable.text =[_dataList1 objectAtIndex:section];
    [views addSubview:lable];
    
    lable.backgroundColor=[UIColor clearColor];
    return views;
}


- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    
    UITableViewCell *cell=[[UITableViewCell alloc]init];
    cell.selectionStyle=UITableViewCellSelectionStyleNone;
    UILabel *label2=[[UILabel alloc]init];
    
    label2.backgroundColor=[UIColor clearColor];
    [cell addSubview:label2];
    label2.font=[UIFont systemFontOfSize:12];
    
    if (!_dataList) {
        return cell;
    }
    
    if ([_dataList count]>indexPath.row) {
        NSString *strings=[_dataList objectAtIndex:indexPath.section];
        
        //自动换行
        if ([UnitPath judgmentImageName:strings]) {
            UIImageView *imamgeView=[[UIImageView alloc]init];
            [cell addSubview:imamgeView];

            [imamgeView mas_makeConstraints:^(MASConstraintMaker *make) {
                make.top.equalTo(cell).with.offset(0);
                make.bottom.equalTo(cell).with.offset(0);
                make.right.equalTo(cell).with.offset(0);
                make.left.equalTo(cell).with.offset(0);

            }];

//            [imamgeView sd_setImageWithURL:[NSURL URLWithString:strings] placeholderImage:[UIImage imageNamed:@"product_DetailInfo"]];
            
            [imamgeView sd_setImageWithURL:[NSURL URLWithString:strings] placeholderImage:[UIImage imageNamed:@"product_DetailInfo"] completed:^(UIImage *image, NSError *error, SDImageCacheType cacheType, NSURL *imageURL) {
                
                if(self.productDetailImage.size.height==0){
                    self.productDetailImage=image;
                    [self.friendTableView reloadData];
                }
                
            }];
            
            
//            UIImage *images=[UIImage imageNamed:@"产品详情-项目介绍_02.png"];
//            imamgeView.image=images;
            
//            imamgeView.frame = CGRectMake(15, 10, ScreenWidth-30, images.size.height/(images.size.width/(ScreenWidth-30))+10);
//            imamgeView.frame = CGRectMake(15, 10, ScreenWidth-30, ScreenWidth);
            
            [imamgeView setContentMode:UIViewContentModeScaleAspectFit];
            label2.text =@"";
            
            
        }else{
            
            if (strings && ![@"(null)" isEqual:strings]) {

                label2.text =strings;
                CGSize sizeFrame=  [UnitPath calculateFrameWithContent:label2.text];
                label2.frame=CGRectMake(10, 5, ScreenWidth-20, sizeFrame.height +10);
                label2.numberOfLines=1+sizeFrame.height/14.316;
        
            }
        }
 
    }
    
    
    cell.selectionStyle=UITableViewCellSelectionStyleNone;
    
    return cell;

}

- (void)didReceiveMemoryWarning
{
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}


@end
